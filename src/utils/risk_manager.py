import pandas as pd
import numpy as np
from typing import Dict, Optional
import MetaTrader5 as mt5


class RiskManager:
    """–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∏—Å–∫–∞–º–∏"""

    def __init__(self, config: Dict):
        self.config = config
        self.daily_loss_limit = 0
        self.daily_loss_current = 0

    def check_risk(self, symbol: str, price: float) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∏—Å–∫–æ–≤ –ø–µ—Ä–µ–¥ —Ç–æ—Ä–≥–æ–≤–ª–µ–π"""
        trading_config = self.config.get('trading', {})

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–∑–∏—Ü–∏–π
        max_positions = trading_config.get('max_open_positions', 2)
        # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–∫—É—â–∏—Ö –ø–æ–∑–∏—Ü–∏–π

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–Ω–µ–≤–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞ —É–±—ã—Ç–∫–æ–≤
        max_daily_loss = trading_config.get('max_daily_loss', 0.03)
        if self.daily_loss_current >= max_daily_loss:
            print(f"‚ö†Ô∏è –î–æ—Å—Ç–∏–≥–Ω—É—Ç –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç —É–±—ã—Ç–∫–æ–≤: {self.daily_loss_current:.2%}")
            return False

        return True

    def calculate_position_size(self, symbol: str, price: float) -> float:
        """–†–∞—Å—á–µ—Ç —Ä–∞–∑–º–µ—Ä–∞ –ø–æ–∑–∏—Ü–∏–∏"""
        trading_config = self.config.get('trading', {})

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ª–æ—Ç –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
        lot_size = trading_config.get('lot_size', 0.01)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ª–æ—Ç
        min_lot = 0.01
        max_lot = 1.0

        lot_size = max(min_lot, min(lot_size, max_lot))
        return round(lot_size, 2)

    def calculate_stop_loss(self, symbol: str, order_type: int, price: float) -> float:
        """–†–∞—Å—á–µ—Ç —Å—Ç–æ–ø-–ª–æ—Å—Å–∞ —Å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º–∏ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è–º–∏"""
        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –æ—à–∏–±–∫–∏ 10030
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º 50 –ø—É–Ω–∫—Ç–æ–≤ –¥–ª—è EURUSD (0.0050)
        if order_type == mt5.ORDER_TYPE_BUY:
            # –î–ª—è BUY: —Å—Ç–æ–ø-–ª–æ—Å—Å –Ω–∏–∂–µ —Ü–µ–Ω—ã –æ—Ç–∫—Ä—ã—Ç–∏—è
            stop_loss = price - 0.0050
        else:
            # –î–ª—è SELL: —Å—Ç–æ–ø-–ª–æ—Å—Å –≤—ã—à–µ —Ü–µ–Ω—ã –æ—Ç–∫—Ä—ã—Ç–∏—è
            stop_loss = price + 0.0050

        return round(stop_loss, 5)

    def calculate_take_profit(self, symbol: str, order_type: int, price: float) -> float:
        """–†–∞—Å—á–µ—Ç —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–∞ —Å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º–∏ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è–º–∏"""
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º 80 –ø—É–Ω–∫—Ç–æ–≤ –¥–ª—è EURUSD (0.0080)
        if order_type == mt5.ORDER_TYPE_BUY:
            # –î–ª—è BUY: —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç –≤—ã—à–µ —Ü–µ–Ω—ã –æ—Ç–∫—Ä—ã—Ç–∏—è
            take_profit = price + 0.0080
        else:
            # –î–ª—è SELL: —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç –Ω–∏–∂–µ —Ü–µ–Ω—ã –æ—Ç–∫—Ä—ã—Ç–∏—è
            take_profit = price - 0.0080

        return round(take_profit, 5)

    def update_daily_loss(self, pnl: float):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–Ω–µ–≤–Ω–æ–≥–æ —É–±—ã—Ç–∫–∞"""
        self.daily_loss_current += max(0, -pnl)
        print(f"üìä –¢–µ–∫—É—â–∏–π –¥–Ω–µ–≤–Ω–æ–π —É–±—ã—Ç–æ–∫: {self.daily_loss_current:.2%}")
