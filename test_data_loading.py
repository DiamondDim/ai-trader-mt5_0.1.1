#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è AI Trading Robot
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src
current_dir = os.path.dirname(os.path.abspath(__file__))
src_path = os.path.join(current_dir, 'src')
if src_path not in sys.path:
    sys.path.insert(0, src_path)

from core.mt5_client import initialize_mt5, load_data, get_available_symbols
from utils.config import load_config


def test_data_loading(symbols_to_test=None):
    """
    –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
    """
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 50)

    if not initialize_mt5():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å MT5")
        return False

    if symbols_to_test is None:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
        symbols_to_test = ['EURUSDrfd', 'GBPUSDrfd', 'USDJPYrfd', 'AUDUSDrfd']

    results = {}

    for symbol in symbols_to_test:
        print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏–º–≤–æ–ª: {symbol}")

        # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–∞–π–º—Ñ—Ä–µ–π–º—ã
        timeframes = ['M1', 'M5', 'M15', 'H1', 'H4']

        for tf in timeframes:
            print(f"  ‚è∞ –¢–∞–π–º—Ñ—Ä–µ–π–º: {tf}")
            data = load_data(symbol, tf, 1000)  # –ó–∞–≥—Ä—É–∂–∞–µ–º 1000 –±–∞—Ä–æ–≤

            if not data.empty:
                print(f"    ‚úÖ –£—Å–ø–µ—à–Ω–æ: {len(data)} –±–∞—Ä–æ–≤")
                results[f"{symbol}_{tf}"] = len(data)

                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö
                if len(data) > 0:
                    print(f"    üìÖ –ü–µ—Ä–≤–∞—è –¥–∞—Ç–∞: {data.index[0]}")
                    print(f"    üìÖ –ü–æ—Å–ª–µ–¥–Ω—è—è –¥–∞—Ç–∞: {data.index[-1]}")
                    print(f"    üìä –ö–æ–ª–æ–Ω–∫–∏: {list(data.columns)}")
                    break  # –ï—Å–ª–∏ –æ–¥–∏–Ω —Ç–∞–π–º—Ñ—Ä–µ–π–º —Å—Ä–∞–±–æ—Ç–∞–ª, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–∏–º–≤–æ–ª—É
            else:
                print(f"    ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")

        if symbol not in [k.split('_')[0] for k in results.keys()]:
            print(f"  üí• –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∏ –¥–ª—è –æ–¥–Ω–æ–≥–æ —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞")

    print(f"\nüìä –ò—Ç–æ–≥–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –∑–∞–≥—Ä—É–∑–æ–∫: {len(results)}")
    for key, count in results.items():
        print(f"   {key}: {count} –±–∞—Ä–æ–≤")

    return len(results) > 0


def check_available_data():
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ MT5
    """
    print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ MT5")
    print("=" * 50)

    if not initialize_mt5():
        return

    import MetaTrader5 as mt5

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–∏–º–≤–æ–ª–æ–≤
    symbols = get_available_symbols()
    print(f"üìà –î–æ—Å—Ç—É–ø–Ω–æ —Å–∏–º–≤–æ–ª–æ–≤: {len(symbols)}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–∏–º–≤–æ–ª–æ–≤
    test_symbols = symbols[:5]  # –ü–µ—Ä–≤—ã–µ 5 —Å–∏–º–≤–æ–ª–æ–≤

    for symbol in test_symbols:
        print(f"\nüîç –°–∏–º–≤–æ–ª: {symbol}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏–º–≤–æ–ª–µ
        symbol_info = mt5.symbol_info(symbol)
        if symbol_info:
            print(f"  ‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω: {symbol_info.name}")
            print(f"  üí∞ Bid: {symbol_info.bid}, Ask: {symbol_info.ask}")

            # –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–µ–±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö
            rates = mt5.copy_rates_from(symbol, mt5.TIMEFRAME_M15, datetime.now(), 10)
            if rates is not None and len(rates) > 0:
                print(f"  üìä –î–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã: {len(rates)} –±–∞—Ä–æ–≤")
            else:
                print(f"  ‚ùå –î–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
        else:
            print(f"  ‚ùå –°–∏–º–≤–æ–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")


if __name__ == "__main__":
    from datetime import datetime

    print("ü§ñ AI Trading Robot - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö")

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö
    success = test_data_loading()

    if success:
        print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
    else:
        print("\n‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏")
        print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ MT5 –∑–∞–ø—É—â–µ–Ω –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –¥–µ–º–æ-—Å—á–µ—Ç—É")
        print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å–∏–º–≤–æ–ª –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏")
        print("3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –µ—Å—Ç—å –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–∞")
        print("4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π —Å–∏–º–≤–æ–ª –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö")
